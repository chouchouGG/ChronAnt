<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace: 命名空间，用于标识每一个Mapper XML文件中的语句，预防在不同的Mapper XML文件中存在相同的语句ID-->
<mapper namespace="cn.uhoc.infra.persistent.dao.ITaskDao">
    <!--resultType: 也称为自动映射，只有在表的列名与POJO类的属性完全一致时映射，会比较方便-->
    <resultMap id="resultMap" type="cn.uhoc.infra.persistent.po.Task">
        <result column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="task_id" property="taskId"/>
        <result column="task_type" property="taskType"/>
        <result column="task_stage" property="taskStage"/>
        <result column="status" property="status"/>
        <result column="crt_retry_num" property="crtRetryNum"/>
        <result column="max_retry_num" property="maxRetryNum"/>
        <result column="priority" property="orderTime"/>
        <result column="order_time" property="priority"/>
        <result column="max_retry_interval" property="maxRetryInterval"/>
        <result column="schedule_log" property="scheduleLog"/>
        <result column="task_context" property="taskContext"/>
        <result column="create_time" property="createTime"/>
        <result column="modify_time" property="modifyTime"/>
    </resultMap>
    <insert id="insertTask">
        insert into ${tableName} (`user_id`,
                                  `task_id`,
                                  `task_type`,
                                  `task_stage`,
                                  `status`,
                                  `crt_retry_num`,
                                  `max_retry_num`,
                                  `order_time`,
                                  `priority`,
                                  `max_retry_interval`,
                                  `schedule_log`,
                                  `task_context`,
                                  `create_time`,
                                  `modify_time`)
        VALUES (#{taskEntity.userId},
                #{taskEntity.taskId},
                #{taskEntity.taskType},
                #{taskEntity.taskStage},
                #{taskEntity.status},
                #{taskEntity.crtRetryNum},
                #{taskEntity.maxRetryNum},
                now(),
                #{taskEntity.priority},
                #{taskEntity.maxRetryInterval},
                #{taskEntity.scheduleLog},
                #{taskEntity.taskContext},
                now(),
                now())
    </insert>
    <!--TODO 学习Mybatis-->
    <update id="updateStatusBatch">
        update ${tableName} set status = #{status}, modify_time = now()
        where task_id in
        <foreach collection="taskIds" item="taskId" index="index"
                 open="(" close=")" separator=",">
            #{taskId}
        </foreach>
    </update>
    <update id="updateTask">
        update ${tableName}
        <set>
            <if test="taskEntity.taskStage != null and taskEntity.taskStage != ''">
                task_stage = #{taskEntity.taskStage}
            </if>
            <if test="taskEntity.status != null">
                status = #{taskEntity.status}
            </if>
            <if test="taskEntity.crtRetryNum != null">
                crt_retry_num = #{taskEntity.crtRetryNum}
            </if>
            <if test="taskEntity.maxRetryNum != null">
                max_retry_num = #{taskEntity.maxRetryNum}
            </if>
            <if test="taskEntity.priority != null">
                priority = #{taskEntity.priority}
            </if>
            <if test="taskEntity.orderTime != null">
                order_time = #{taskEntity.orderTime}
            </if>
            <if test="taskEntity.maxRetryInterval != null">
                max_retry_interval = #{taskEntity.maxRetryInterval}
            </if>
            <if test="taskEntity.scheduleLog != null and taskEntity.scheduleLog != ''">
                schedule_log = #{taskEntity.scheduleLog}
            </if>
            <if test="taskEntity.taskContext != null and taskEntity.taskContext != ''">
                task_context = #{taskEntity.taskContext}
            </if>
            modify_time = now()
        </set>
        where task_id = #{taskEntity.taskId}
        and status not in
        <foreach collection="statusList" item="status" index="index" open="(" close=")" separator=",">
            #{status}
        </foreach>
    </update>
    <select id="getTaskList" resultMap="resultMap">
        select *
        from ${tableName}
        where task_type = #{taskType}
          and status = #{status}
        order by order_time
        limit #{limit}
    </select>
    <select id="getTaskById" resultMap="resultMap">
        select *
        from ${tableName}
        where task_id = #{taskId}
    </select>
    <select id="getTaskByUseridAndStatus" resultMap="resultMap">
        select *
        from ${tableName}
        where user_id = #{userId}
        and status in
        <foreach collection="statusList" item="status" index="index" open="(" close=")" separator=",">
            #{status}
        </foreach>
    </select>


</mapper>